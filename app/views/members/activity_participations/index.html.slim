h1 = activities_human_name

section
  h2 = t_activity('.coming_activity_participations')
  - @coming_participations = current_member.activity_participations.coming.includes(:activity).merge(Activity.ordered(:asc))
  - if @coming_participations.empty?
    p.empty = t('.no_coming_activity_participations')
  - else
    ul.activities
      - @coming_participations.each do |participation|
        li
          span.date_and_period
            span.date = l(participation.activity.date, format: :medium).capitalize
            span.period = participation.activity.period
          span.icons
            span.participant_count title=t('activities.participant_count', count: participation.participants_count)
              span.text
                = participation.participants_count
              span.icon
                = inline_svg_tag 'participant.svg', size: '16px'
            - if participation.carpooling?
              span.carpooling title="#{t('.carpooling')}: #{participation.carpooling_phone.phony_formatted}"
                span.icon = inline_svg_tag 'carpooling.svg', size: '22px'
            - else
              span.carpooling
          span.action
            - if participation.destroyable?
              == link_to t('.cancel_link'), [:members, participation], method: :delete, class: 'cancel'
            - else
              span.hidden_action = link_to t('.cancel_link'), '#', class: 'cancel'
          span.activity
            == display_activity(participation.activity, description: true)
            = ', '
            == display_place(participation.activity)

    - if @coming_participations.any? { |p| !p.destroyable? }
      p.info == t_activity('.coming_activity_participation_cannot_be_cancel_explanation', days_count: Current.acp.activity_participation_deletion_deadline_in_days, contact_link: mail_to(Current.acp.email, t('.contact_link')))

section
  h2 = t('.activity_participation_form_title')
  - @activities = Activity.available_for(current_member)
  - if @activities.empty?
    p.empty = t_activity('.no_activities')
  - else
    .activities-form
      - @activity_participation ||= ActivityParticipation.new(activity: @activities.first, carpooling_phone: current_member.phones_array.first, carpooling_city: current_member.city)
      = form_for [:members, @activity_participation] do |f|
        #calendar.calendar data={ dates: @activities.map(&:date).uniq.join(','), selected_date: @activity_participation.date }
        .input
          label = t('.activity_label')
          label.label-error= @activity_participation.errors[:activity].first
          .no_activities style='display: none;'
            p.empty = t_activity('.no_activities_this_month')
          .activities.pretty_check_boxes
            = f.collection_check_boxes(:activity_ids, @activities, :id, :period) do |b|
              = b.label(class: "activity-#{b.object.date}") do
                = b.check_box
                span.checkmark
                span.label
                  = activity_label(b.object).html_safe
                  span.participant_count title=t('activities.participant_count', count: b.object.participants_count)
                    span.text
                      = ', '
                      = b.object.participants_count
                      = '/'
                      = b.object.participants_limit || 'âˆž'
                    span.icon
                      = inline_svg_tag 'participant.svg', size: '16px'
        .input
          label = t('.participants_count_label')
          - if @activity_participation.errors[:participants_count].any?
            ul.error_explanation
              - @activity_participation.errors[:participants_count].each do |msg|
                li = msg
          = f.number_field :participants_count, step: 1, min: 1, class: 'participants_count', required: true
        .input
          label.title
            = t('.carpooling')
            span.tooltip-toggle onclick="" data-tooltip=t('.carpooling_tooltip')
              = inline_svg_tag 'info_circle.svg', size: '16px'
          div.pretty_check_boxes
            label.carpooling
              = f.check_box :carpooling
              span.checkmark
              span.label = t('.carpooling_checkbox')
          label.carpooling
            = f.phone_field :carpooling_phone, placeholder: t('.carpooling_phone')
          label.carpooling
            = f.text_field :carpooling_city, placeholder: t('.carpooling_city')
        .input
          = f.submit t('.activity_form_submit'), id: 'subscribe-button'

section
  h2 = t_activity('.past_activity_participations')
  - @past_participations = current_member.activity_participations.past_current_year.includes(:activity).merge(Activity.ordered(:desc))
  - if @past_participations.empty?
    p.empty = t('.no_past_activity_participations')
  - else
    ul.activities
      - @past_participations.each do |participation|
        li class="#{participation.rejected? ? 'rejected' : ''}"
          span.date_and_period
            span.date = l(participation.activity.date, format: :medium).capitalize
            span.period = participation.activity.period
          span.icons.one
            span.participant_count title=t('activities.participant_count', count: participation.participants_count)
              span.text
                = participation.participants_count
              span.icon
                = inline_svg_tag 'participant.svg', size: '16px'
          - if participation.state.in? %w[validated rejected]
            span.action
              span class=participation.state
                == participation.state_i18n_name
          span.activity
            == display_activity(participation.activity, description: true)
            = ', '
            == display_place(participation.activity)
