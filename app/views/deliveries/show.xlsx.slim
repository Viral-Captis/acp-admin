- distributions = Distribution.with_delivery_memberships(@delivery)
- small_basket = Basket.small
- big_basket = Basket.big

- unless @filter_distribution
  table
    caption Récap
    thead
      tr
        td
        td Total
        td Eveil
        td Abondance
    tbody
      - distributions.each do |distribution|
        tr
          td= distribution.name
          td= distribution.delivery_memberships.to_a.size
          td= distribution.delivery_memberships.to_a.count { |m| m.basket_id == small_basket.id }
          td= distribution.delivery_memberships.to_a.count { |m| m.basket_id == big_basket.id }
      tr
      tr
        td Paniers Jardin de la Main
        td= distributions.sum { |d| d.delivery_memberships.to_a.count { |m| m.distribution_id == 1 } }
        td= distributions.sum { |d| d.delivery_memberships.to_a.count { |m| m.distribution_id == 1 && m.basket_id == small_basket.id } }
        td= distributions.sum { |d| d.delivery_memberships.to_a.count { |m| m.distribution_id == 1 && m.basket_id == big_basket.id } }
      tr
        td Paniers à préparer
        td= distributions.sum { |d| d.delivery_memberships.to_a.count { |m| m.distribution_id != 1 } }
        td= distributions.sum { |d| d.delivery_memberships.to_a.count { |m| m.distribution_id != 1 && m.basket_id == small_basket.id } }
        td= distributions.sum { |d| d.delivery_memberships.to_a.count { |m| m.distribution_id != 1 && m.basket_id == big_basket.id } }
      tr
      tr
        td Total
        td= distributions.sum { |d| d.delivery_memberships.to_a.size }
        td= distributions.sum { |d| d.delivery_memberships.to_a.count { |m| m.basket_id == small_basket.id } }
        td= distributions.sum { |d| d.delivery_memberships.to_a.count { |m| m.basket_id == big_basket.id } }
      tr
      tr
      tr
        td Absences
        td= Absence.including_date(@delivery.date).count

- distributions.each do |distribution|
  - next if @filter_distribution && @filter_distribution != distribution
  table
    caption= "#{distribution.name} (#{Basket.during_year(@delivery.date.year).map { |b| distribution.delivery_memberships.to_a.count { |m| m.basket_id == b.id } }.join('+')})"
    thead
      tr
        td Prénom
        td Nom
        - if distribution.require_delivery_address?
          td Adresse
          td Zip
          td Ville
        td Panier
        - unless @filter_distribution
          td Note alimentaire
    tbody
      - memberships = distribution.delivery_memberships.sort_by { |m| m.member.last_name }
      - memberships.each do |membership|
        - member = membership.member
        tr
          td= member.first_name
          td= member.last_name
          - if distribution.require_delivery_address?
            td= member.final_delivery_address
            td= member.final_delivery_zip
            td= member.final_delivery_city
          td= membership.basket.name
          - unless @filter_distribution
            td= truncate(member.food_note, length: 80)
